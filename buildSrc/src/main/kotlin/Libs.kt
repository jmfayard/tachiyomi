import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [appcompat website](http://developer.android.com/tools/extras/support-library.html) */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * [cardview website](http://developer.android.com/tools/extras/support-library.html) */
    const val cardview: String = "androidx.cardview:cardview:" + Versions.cardview

    /**
     * [core-ktx website](http://developer.android.com/tools/extras/support-library.html) */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.androidx_core

    /**
     * [core website](http://developer.android.com/tools/extras/support-library.html) */
    const val androidx_core_core: String = "androidx.core:core:" + Versions.androidx_core

    /**
     * [recyclerview website](http://developer.android.com/tools/extras/support-library.html) */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    const val com_afollestad_material_dialogs_core: String =
            "com.afollestad.material-dialogs:core:" + Versions.com_afollestad_material_dialogs_core

    /**
     * [constraint-layout website](http://tools.android.com) */
    const val constraint_layout: String =
            "com.android.support.constraint:constraint-layout:" + Versions.constraint_layout

    /**
     * [aapt2 website](https://developer.android.com/studio) */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * [gradle website](https://developer.android.com/studio) */
    const val com_android_tools_build_gradle: String =
            "com.android.tools.build:gradle:" + Versions.com_android_tools_build_gradle

    /**
     * [lint-gradle website](https://developer.android.com/studio) */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * [material-design-dimens website](https://github.com/DmitryMalkovich/material-design-dimens) */
    const val material_design_dimens: String =
            "com.dmitrymalkovich.android:material-design-dimens:" + Versions.material_design_dimens

    /**
     * [rx-preferences website](https://github.com/f2prateek/rx-preferences) */
    const val rx_preferences: String =
            "com.f2prateek.rx.preferences2:rx-preferences:" + Versions.rx_preferences

    /**
     * [compiler website](https://github.com/bumptech/glide) */
    const val com_github_bumptech_glide_compiler: String =
            "com.github.bumptech.glide:compiler:" + Versions.com_github_bumptech_glide

    /**
     * [glide website](https://github.com/bumptech/glide) */
    const val glide: String =
            "com.github.bumptech.glide:glide:" + Versions.com_github_bumptech_glide

    /**
     * [okhttp3-integration website](https://github.com/bumptech/glide) */
    const val okhttp3_integration: String =
            "com.github.bumptech.glide:okhttp3-integration:" + Versions.com_github_bumptech_glide

    /**
     * [conductor website](https://github.com/bluelinelabs/Conductor) */
    const val conductor: String = "com.github.inorichi.Conductor:conductor:" + Versions.conductor

    /**
     * [kotson website](https://github.com/SalomonBrys/Kotson) */
    const val kotson: String = "com.github.salomonbrys.kotson:kotson:" + Versions.kotson

    /**
     * [smoothie website](https://github.com/stephanenicolas/toothpick.git) */
    const val smoothie: String =
            "com.github.stephanenicolas.toothpick:smoothie:" + Versions.com_github_stephanenicolas_toothpick

    /**
     * [toothpick-compiler website](https://github.com/stephanenicolas/toothpick.git) */
    const val toothpick_compiler: String =
            "com.github.stephanenicolas.toothpick:toothpick-compiler:" + Versions.com_github_stephanenicolas_toothpick

    /**
     * [toothpick-runtime website](https://github.com/stephanenicolas/toothpick.git) */
    const val toothpick_runtime: String =
            "com.github.stephanenicolas.toothpick:toothpick-runtime:" + Versions.com_github_stephanenicolas_toothpick

    /**
     * [toothpick-testing website](https://github.com/stephanenicolas/toothpick.git) */
    const val toothpick_testing: String =
            "com.github.stephanenicolas.toothpick:toothpick-testing:" + Versions.com_github_stephanenicolas_toothpick

    /**
     * [material website](http://developer.android.com/tools/extras/support-library.html) */
    const val material: String = "com.google.android.material:material:" + Versions.material

    /**
     * [flexbox website](https://github.com/google/flexbox-layout) */
    const val flexbox: String = "com.google.android:flexbox:" + Versions.flexbox

    /**
     * [gson website](https://github.com/google/gson) */
    const val gson: String = "com.google.code.gson:gson:" + Versions.gson

    /**
     * [rxbinding-appcompat-v7-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_appcompat_v7_kotlin: String =
            "com.jakewharton.rxbinding2:rxbinding-appcompat-v7-kotlin:" + Versions.com_jakewharton_rxbinding2

    /**
     * [rxbinding-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_kotlin: String =
            "com.jakewharton.rxbinding2:rxbinding-kotlin:" + Versions.com_jakewharton_rxbinding2

    /**
     * [rxbinding-support-v4-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_support_v4_kotlin: String =
            "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:" + Versions.com_jakewharton_rxbinding2

    const val rxrelay: String = "com.jakewharton.rxrelay2:rxrelay:" + Versions.rxrelay

    /**
     * [timber website](https://github.com/JakeWharton/timber) */
    const val timber: String = "com.jakewharton.timber:timber:" + Versions.timber

    /**
     * [mockito-kotlin website](https://github.com/nhaarman/mockito-kotlin) */
    const val mockito_kotlin: String = "com.nhaarman:mockito-kotlin:" + Versions.mockito_kotlin

    /**
     * [sqlite website](https://github.com/pushtorefresh/storio) */
    const val sqlite: String = "com.pushtorefresh.storio3:sqlite:" + Versions.sqlite

    /**
     * [duktape-android website](https://github.com/square/duktape-android) */
    const val duktape_android: String =
            "com.squareup.duktape:duktape-android:" + Versions.duktape_android

    /**
     * [okhttp website](https://github.com/square/okhttp) */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.okhttp

    /**
     * [rxandroid website](https://github.com/ReactiveX/RxAndroid) */
    const val rxandroid: String = "io.reactivex.rxjava2:rxandroid:" + Versions.rxandroid

    /**
     * [rxjava website](https://github.com/ReactiveX/RxJava) */
    const val rxjava: String = "io.reactivex.rxjava2:rxjava:" + Versions.rxjava

    /**
     * [rxkotlin website](https://github.com/ReactiveX/RxKotlin) */
    const val rxkotlin: String = "io.reactivex.rxjava2:rxkotlin:" + Versions.rxkotlin

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [junit website](http://junit.org) */
    const val junit: String = "junit:junit:" + Versions.junit

    /**
     * [kotlin-android-extensions-runtime website](https://kotlinlang.org/) */
    const val kotlin_android_extensions_runtime: String =
            "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-android-extensions website](https://kotlinlang.org/) */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-annotation-processing-gradle website](https://kotlinlang.org/) */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-gradle-plugin website](https://kotlinlang.org/) */
    const val kotlin_gradle_plugin: String =
            "org.jetbrains.kotlin:kotlin-gradle-plugin:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-scripting-compiler-embeddable website](https://kotlinlang.org/) */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlin-stdlib-jdk7 website](https://kotlinlang.org/) */
    const val kotlin_stdlib_jdk7: String =
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:" + Versions.org_jetbrains_kotlin

    /**
     * [kotlinx-coroutines-android website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.org_jetbrains_kotlinx

    /**
     * [kotlinx-coroutines-core website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_core: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:" + Versions.org_jetbrains_kotlinx

    /**
     * [jsoup website](https://jsoup.org/) */
    const val jsoup: String = "org.jsoup:jsoup:" + Versions.jsoup

    /**
     * [mockito-core website](https://github.com/mockito/mockito) */
    const val mockito_core: String = "org.mockito:mockito-core:" + Versions.mockito_core
}
