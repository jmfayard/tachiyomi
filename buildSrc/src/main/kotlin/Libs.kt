import kotlin.String

/**
 * Generated by [gradle-kotlin-dsl-libs](https://github.com/jmfayard/gradle-kotlin-dsl-libs)
 *
 * Run again
 *   `$ ./gradlew syncLibs`
 * to update this file */
object Libs {
    /**
     * [aapt2 website](https://developer.android.com/studio) */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * [acra website](http://acra.ch) */
    const val acra: String = "ch.acra:acra:" + Versions.acra

    /**
     * [adapter-rxjava website](https://github.com/square/retrofit/) */
    const val adapter_rxjava: String =
            "com.squareup.retrofit2:adapter-rxjava:" + Versions.adapter_rxjava

    /**
     * [android-job website](https://github.com/evernote/android-job) */
    const val android_job: String = "com.evernote:android-job:" + Versions.android_job

    /**
     * [android-shortcut-gradle-plugin website](https://github.com/Zellius/android-shortcut-gradle-plugin) */
    const val android_shortcut_gradle_plugin: String =
            "com.github.zellius:android-shortcut-gradle-plugin:" + Versions.android_shortcut_gradle_plugin

    /**
     * [appcompat-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val appcompat_v7: String = "com.android.support:appcompat-v7:" + Versions.appcompat_v7

    /**
     * [assertj-core website](http://assertj.org) */
    const val assertj_core: String = "org.assertj:assertj-core:" + Versions.assertj_core

    /**
     * [cardview-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val cardview_v7: String = "com.android.support:cardview-v7:" + Versions.cardview_v7

    /**
     * [changelog website](https://github.com/gabrielemariotti/changeloglib) */
    const val changelog: String =
            "com.github.gabrielemariotti.changeloglib:changelog:" + Versions.changelog

    const val com_afollestad_material_dialogs_core: String =
            "com.afollestad.material-dialogs:core:" + Versions.com_afollestad_material_dialogs_core

    /**
     * [gradle website](https://developer.android.com/studio) */
    const val com_android_tools_build_gradle: String =
            "com.android.tools.build:gradle:" + Versions.com_android_tools_build_gradle

    /**
     * [compiler website](https://github.com/bumptech/glide) */
    const val com_github_bumptech_glide_compiler: String =
            "com.github.bumptech.glide:compiler:" + Versions.com_github_bumptech_glide_compiler

    /**
     * [library website](https://github.com/dmytrodanylyk/android-process-button) */
    const val com_github_dmytrodanylyk_android_process_button_library: String =
            "com.github.dmytrodanylyk.android-process-button:library:" + Versions.com_github_dmytrodanylyk_android_process_button_library

    /**
     * [conductor website](https://github.com/bluelinelabs/Conductor) */
    const val conductor: String = "com.bluelinelabs:conductor:" + Versions.conductor

    /**
     * [conductor-support website](https://github.com/bluelinelabs/Conductor) */
    const val conductor_support: String =
            "com.bluelinelabs:conductor-support:" + Versions.conductor_support

    const val conductor_support_preference: String =
            "com.github.inorichi:conductor-support-preference:" + Versions.conductor_support_preference

    /**
     * [constraint-layout website](http://tools.android.com) */
    const val constraint_layout: String =
            "com.android.support.constraint:constraint-layout:" + Versions.constraint_layout

    /**
     * [converter-gson website](https://github.com/square/retrofit/) */
    const val converter_gson: String =
            "com.squareup.retrofit2:converter-gson:" + Versions.converter_gson

    /**
     * [customtabs website](http://developer.android.com/tools/extras/support-library.html) */
    const val customtabs: String = "com.android.support:customtabs:" + Versions.customtabs

    /**
     * [design website](http://developer.android.com/tools/extras/support-library.html) */
    const val design: String = "com.android.support:design:" + Versions.design

    const val directionalviewpager: String =
            "com.github.inorichi:DirectionalViewPager:" + Versions.directionalviewpager

    /**
     * [disklrucache website](https://github.com/JakeWharton/DiskLruCache/) */
    const val disklrucache: String = "com.jakewharton:disklrucache:" + Versions.disklrucache

    /**
     * [duktape-android website](https://github.com/square/duktape-android) */
    const val duktape_android: String =
            "com.squareup.duktape:duktape-android:" + Versions.duktape_android

    const val filepicker: String = "com.nononsenseapps:filepicker:" + Versions.filepicker

    const val firebase_core: String = "com.google.firebase:firebase-core:" + Versions.firebase_core

    /**
     * [flexible-adapter website](https://github.com/davideas/FlexibleAdapter) */
    const val flexible_adapter: String = "eu.davidea:flexible-adapter:" + Versions.flexible_adapter

    /**
     * [flexible-adapter-ui website](https://github.com/davideas/FlexibleAdapter) */
    const val flexible_adapter_ui: String =
            "eu.davidea:flexible-adapter-ui:" + Versions.flexible_adapter_ui

    /**
     * [glide website](https://github.com/bumptech/glide) */
    const val glide: String = "com.github.bumptech.glide:glide:" + Versions.glide

    const val glide_transformations: String =
            "jp.wasabeef:glide-transformations:" + Versions.glide_transformations

    /**
     * [google-services website](http://tools.android.com/) */
    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    /**
     * [gradle-versions-plugin website](https://github.com/ben-manes/gradle-versions-plugin) */
    const val gradle_versions_plugin: String =
            "com.github.ben-manes:gradle-versions-plugin:" + Versions.gradle_versions_plugin

    /**
     * [gson website](https://github.com/google/gson) */
    const val gson: String = "com.google.code.gson:gson:" + Versions.gson

    /**
     * [injekt-core website](https://github.com/kohesive/injekt) */
    const val injekt_core: String = "com.github.inorichi.injekt:injekt-core:" + Versions.injekt_core

    /**
     * [java-nat-sort website](https://github.com/gpanther/java-nat-sort) */
    const val java_nat_sort: String = "com.github.gpanther:java-nat-sort:" + Versions.java_nat_sort

    const val jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin: String =
            "jmfayard.github.io.gradle-kotlin-dsl-libs:jmfayard.github.io.gradle-kotlin-dsl-libs.gradle.plugin:" + Versions.jmfayard_github_io_gradle_kotlin_dsl_libs_gradle_plugin

    /**
     * [jsoup website](https://jsoup.org/) */
    const val jsoup: String = "org.jsoup:jsoup:" + Versions.jsoup

    /**
     * [junit website](http://junit.org) */
    const val junit: String = "junit:junit:" + Versions.junit

    const val junrar_android: String =
            "com.github.inorichi:junrar-android:" + Versions.junrar_android

    /**
     * [kotlin-android-extensions website](https://kotlinlang.org/) */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.kotlin_android_extensions

    /**
     * [kotlin-android-extensions-runtime website](https://kotlinlang.org/) */
    const val kotlin_android_extensions_runtime: String =
            "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" + Versions.kotlin_android_extensions_runtime

    /**
     * [kotlin-annotation-processing-gradle website](https://kotlinlang.org/) */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" + Versions.kotlin_annotation_processing_gradle

    /**
     * [kotlin-gradle-plugin website](https://kotlinlang.org/) */
    const val kotlin_gradle_plugin: String =
            "org.jetbrains.kotlin:kotlin-gradle-plugin:" + Versions.kotlin_gradle_plugin

    /**
     * [kotlin-stdlib website](https://kotlinlang.org/) */
    const val kotlin_stdlib: String = "org.jetbrains.kotlin:kotlin-stdlib:" + Versions.kotlin_stdlib

    /**
     * [kotlinx-coroutines-android website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_android: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.kotlinx_coroutines_android

    /**
     * [kotlinx-coroutines-core website](https://github.com/Kotlin/kotlinx.coroutines) */
    const val kotlinx_coroutines_core: String =
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:" + Versions.kotlinx_coroutines_core

    /**
     * [kotson website](https://github.com/SalomonBrys/Kotson) */
    const val kotson: String = "com.github.salomonbrys.kotson:kotson:" + Versions.kotson

    /**
     * [lint-gradle website](https://developer.android.com/studio) */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * [material-design-dimens website](https://github.com/DmitryMalkovich/material-design-dimens) */
    const val material_design_dimens: String =
            "com.dmitrymalkovich.android:material-design-dimens:" + Versions.material_design_dimens

    /**
     * [library website](https://github.com/2dxgujun/AndroidTagGroup) */
    const val me_gujun_android_taggroup_library: String =
            "me.gujun.android.taggroup:library:" + Versions.me_gujun_android_taggroup_library

    /**
     * [library website](https://github.com/DreaminginCodeZH/SystemUiHelper) */
    const val me_zhanghai_android_systemuihelper_library: String =
            "me.zhanghai.android.systemuihelper:library:" + Versions.me_zhanghai_android_systemuihelper_library

    /**
     * [mockito-core website](https://github.com/mockito/mockito) */
    const val mockito_core: String = "org.mockito:mockito-core:" + Versions.mockito_core

    const val multidex: String = "com.android.support:multidex:" + Versions.multidex

    const val multidex_instrumentation: String =
            "com.android.support:multidex-instrumentation:" + Versions.multidex_instrumentation

    /**
     * [nucleus website](https://github.com/konmik/nucleus) */
    const val nucleus: String = "info.android15.nucleus:nucleus:" + Versions.nucleus

    /**
     * [nucleus-support-v7 website](https://github.com/konmik/nucleus) */
    const val nucleus_support_v7: String =
            "info.android15.nucleus:nucleus-support-v7:" + Versions.nucleus_support_v7

    /**
     * [okhttp website](https://github.com/square/okhttp) */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.okhttp

    /**
     * [okhttp3-integration website](https://github.com/bumptech/glide) */
    const val okhttp3_integration: String =
            "com.github.bumptech.glide:okhttp3-integration:" + Versions.okhttp3_integration

    /**
     * [okio website](https://github.com/square/okio/) */
    const val okio: String = "com.squareup.okio:okio:" + Versions.okio

    /**
     * [PhotoView website](https://github.com/chrisbanes/PhotoView) */
    const val photoview: String = "com.github.chrisbanes:PhotoView:" + Versions.photoview

    const val play_services_gcm: String =
            "com.google.android.gms:play-services-gcm:" + Versions.play_services_gcm

    /**
     * [preference-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val preference_v7: String = "com.android.support:preference-v7:" + Versions.preference_v7

    /**
     * [reactivenetwork website](https://github.com/pwittchen/ReactiveNetwork) */
    const val reactivenetwork: String =
            "com.github.pwittchen:reactivenetwork:" + Versions.reactivenetwork

    /**
     * [recyclerview-v7 website](http://developer.android.com/tools/extras/support-library.html) */
    const val recyclerview_v7: String =
            "com.android.support:recyclerview-v7:" + Versions.recyclerview_v7

    /**
     * [retrofit website](https://github.com/square/retrofit/) */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" + Versions.retrofit

    /**
     * [robolectric website](http://robolectric.org) */
    const val robolectric: String = "org.robolectric:robolectric:" + Versions.robolectric

    /**
     * [rx-preferences website](https://github.com/f2prateek/rx-preferences) */
    const val rx_preferences: String =
            "com.f2prateek.rx.preferences:rx-preferences:" + Versions.rx_preferences

    /**
     * [rxandroid website](https://github.com/ReactiveX/RxAndroid) */
    const val rxandroid: String = "io.reactivex:rxandroid:" + Versions.rxandroid

    /**
     * [rxbinding-appcompat-v7-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_appcompat_v7_kotlin: String =
            "com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:" + Versions.rxbinding_appcompat_v7_kotlin

    /**
     * [rxbinding-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_kotlin: String =
            "com.jakewharton.rxbinding:rxbinding-kotlin:" + Versions.rxbinding_kotlin

    /**
     * [rxbinding-recyclerview-v7-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_recyclerview_v7_kotlin: String =
            "com.jakewharton.rxbinding:rxbinding-recyclerview-v7-kotlin:" + Versions.rxbinding_recyclerview_v7_kotlin

    /**
     * [rxbinding-support-v4-kotlin website](https://github.com/JakeWharton/RxBinding/) */
    const val rxbinding_support_v4_kotlin: String =
            "com.jakewharton.rxbinding:rxbinding-support-v4-kotlin:" + Versions.rxbinding_support_v4_kotlin

    /**
     * [rxjava website](https://github.com/ReactiveX/RxJava) */
    const val rxjava: String = "io.reactivex:rxjava:" + Versions.rxjava

    const val rxrelay: String = "com.jakewharton.rxrelay:rxrelay:" + Versions.rxrelay

    /**
     * [shadows-multidex website](http://robolectric.org) */
    const val shadows_multidex: String =
            "org.robolectric:shadows-multidex:" + Versions.shadows_multidex

    /**
     * [shadows-play-services website](http://robolectric.org) */
    const val shadows_play_services: String =
            "org.robolectric:shadows-play-services:" + Versions.shadows_play_services

    const val slice: String = "com.github.mthli:Slice:" + Versions.slice

    /**
     * [sqlite website](https://github.com/pushtorefresh/storio) */
    const val sqlite: String = "com.pushtorefresh.storio:sqlite:" + Versions.sqlite

    /**
     * [subsampling-scale-image-view website](https://github.com/davemorrissey/subsampling-scale-image-view) */
    const val subsampling_scale_image_view: String =
            "com.github.inorichi:subsampling-scale-image-view:" + Versions.subsampling_scale_image_view

    /**
     * [support-annotations website](http://developer.android.com/tools/extras/support-library.html) */
    const val support_annotations: String =
            "com.android.support:support-annotations:" + Versions.support_annotations

    /**
     * [support-v4 website](http://developer.android.com/tools/extras/support-library.html) */
    const val support_v4: String = "com.android.support:support-v4:" + Versions.support_v4

    const val textdrawable: String = "com.github.amulyakhare:TextDrawable:" + Versions.textdrawable

    /**
     * [timber website](https://github.com/JakeWharton/timber) */
    const val timber: String = "com.jakewharton.timber:timber:" + Versions.timber

    const val unifile: String = "com.github.inorichi:unifile:" + Versions.unifile

    /**
     * [viewstatepageradapter website](https://github.com/NightlyNexus/ViewStatePagerAdapter/) */
    const val viewstatepageradapter: String =
            "com.nightlynexus.viewstatepageradapter:viewstatepageradapter:" + Versions.viewstatepageradapter
}
